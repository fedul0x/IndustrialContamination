package ru.fedul0x.ic.dataaccess.dataobject;

// Generated 23.12.2012 2:11:14 by Hibernate Tools 3.2.1.GA
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import ru.fedul0x.ic.dataaccess.DataEntity;

/**
 * Patient generated by hbm2java
 */
@Entity
@Table(name = "company", schema = "public")
public class Company extends DataEntity {

    private String fullName;
    private String abbreviatedName;
    private String positionOfHead;
    private String lastName;
    private String firstName;
    private String middleName;
    //TODO rewrite inn type and logic
    private String inn;
    //TODO rewrite okpo type and logic
    private String okpo;
    //TODO rewrite okved type and logic
    private String okved;
    private String email;
    private String phoneNumber;
    /**
     * Юридический адрес
     */
    private String legalAddress;
    /**
     * Почтовый адрес
     */
    private String postalAddress;
    /**
     * Местонахождение
     */
    private String location;

    private Date issueDate;
    private Date receiptDate;

    private Set<DataSheet> dataSheets = new HashSet<>(0);

    public Company() {
    }

    public Company(Long id) {
        this.id = id;
    }

    public Company(String fullName, String abbreviatedName, String positionOfHead, String lastName, String firstName, String middleName, String inn, String okpo, String okved, String email, String phoneNumber, String legalAddress, String postalAddress, String location, Date issueDate, Date receiptDate) {
        this.fullName = fullName;
        this.abbreviatedName = abbreviatedName;
        this.positionOfHead = positionOfHead;
        this.lastName = lastName;
        this.firstName = firstName;
        this.middleName = middleName;
        this.inn = inn;
        this.okpo = okpo;
        this.okved = okved;
        this.email = email;
        this.phoneNumber = phoneNumber;
        this.legalAddress = legalAddress;
        this.postalAddress = postalAddress;
        this.location = location;
        this.issueDate = issueDate;
        this.receiptDate = receiptDate;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @Override
    public Long getId() {
        return this.id;
    }

    @Override
    public void setId(Long id) {
        this.id = id;
    }

    @Column(name = "full_name")
    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    @Column(name = "abbreviated_name")
    public String getAbbreviatedName() {
        return abbreviatedName;
    }

    public void setAbbreviatedName(String abbreviatedName) {
        this.abbreviatedName = abbreviatedName;
    }

    @Column(name = "position_of_head")
    public String getPositionOfHead() {
        return this.positionOfHead;
    }

    public void setPositionOfHead(String positionOfHead) {
        this.positionOfHead = positionOfHead;
    }

    @Column(name = "first_name")
    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name = "last_name")
    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Column(name = "middle_name")
    public String getMiddleName() {
        return middleName;
    }

    public void setMiddleName(String middleName) {
        this.middleName = middleName;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "issue_date", length = 13)
    public Date getIssueDate() {
        return this.issueDate;
    }

    public void setIssueDate(Date issueDate) {
        this.issueDate = issueDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "receipt_date", length = 13)
    public Date getReceiptDate() {
        return this.receiptDate;
    }

    public void setReceiptDate(Date receiptDate) {
        this.receiptDate = receiptDate;
    }

    @Column(name = "phone_number")
    public String getPhoneNumber() {
        return this.phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    @Column(name = "inn")
    public String getInn() {
        return inn;
    }

    public void setInn(String inn) {
        this.inn = inn;
    }

    @Column(name = "okpo")
    public String getOkpo() {
        return okpo;
    }

    public void setOkpo(String okpo) {
        this.okpo = okpo;
    }

    @Column(name = "okved")
    public String getOkved() {
        return okved;
    }

    public void setOkved(String okved) {
        this.okved = okved;
    }

    @Column(name = "email")
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "legal_address")
    public String getLegalAddress() {
        return legalAddress;
    }

    public void setLegalAddress(String legalAddress) {
        this.legalAddress = legalAddress;
    }

    @Column(name = "postal_address")
    public String getPostalAddress() {
        return postalAddress;
    }

    public void setPostalAddress(String postalAddress) {
        this.postalAddress = postalAddress;
    }

    @Column(name = "location")
    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "company")
    public Set<DataSheet> getDataSheets() {
        return dataSheets;
    }

    public void setDataSheets(Set<DataSheet> dataSheets) {
        this.dataSheets = dataSheets;
    }

}
